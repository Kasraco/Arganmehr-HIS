// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Web.Controllers
{
    public partial class InstitutionController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected InstitutionController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ListAjax()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListAjax);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditInstitution()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInstitution);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ExistInstitutionCode()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ExistInstitutionCode);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ExistInstitutionTitle()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ExistInstitutionTitle);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ExistEmailAddress()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ExistEmailAddress);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckPassword()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckPassword);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult IsUserNameExist()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.IsUserNameExist);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public InstitutionController Actions { get { return MVC.Institution; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Institution";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Institution";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string List = "List";
            public readonly string ListAjax = "ListAjax";
            public readonly string AddInstitution = "AddInstitution";
            public readonly string EditInstitution = "EditInstitution";
            public readonly string ExistInstitutionCode = "ExistInstitutionCode";
            public readonly string ExistInstitutionTitle = "ExistInstitutionTitle";
            public readonly string ExistEmailAddress = "ExistEmailAddress";
            public readonly string CheckPassword = "CheckPassword";
            public readonly string IsUserNameExist = "IsUserNameExist";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string List = "List";
            public const string ListAjax = "ListAjax";
            public const string AddInstitution = "AddInstitution";
            public const string EditInstitution = "EditInstitution";
            public const string ExistInstitutionCode = "ExistInstitutionCode";
            public const string ExistInstitutionTitle = "ExistInstitutionTitle";
            public const string ExistEmailAddress = "ExistEmailAddress";
            public const string CheckPassword = "CheckPassword";
            public const string IsUserNameExist = "IsUserNameExist";
        }


        static readonly ActionParamsClass_ListAjax s_params_ListAjax = new ActionParamsClass_ListAjax();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ListAjax ListAjaxParams { get { return s_params_ListAjax; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ListAjax
        {
            public readonly string search = "search";
        }
        static readonly ActionParamsClass_AddInstitution s_params_AddInstitution = new ActionParamsClass_AddInstitution();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddInstitution AddInstitutionParams { get { return s_params_AddInstitution; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddInstitution
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_EditInstitution s_params_EditInstitution = new ActionParamsClass_EditInstitution();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditInstitution EditInstitutionParams { get { return s_params_EditInstitution; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditInstitution
        {
            public readonly string InstitutionId = "InstitutionId";
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_ExistInstitutionCode s_params_ExistInstitutionCode = new ActionParamsClass_ExistInstitutionCode();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExistInstitutionCode ExistInstitutionCodeParams { get { return s_params_ExistInstitutionCode; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExistInstitutionCode
        {
            public readonly string InstitutionCode = "InstitutionCode";
        }
        static readonly ActionParamsClass_ExistInstitutionTitle s_params_ExistInstitutionTitle = new ActionParamsClass_ExistInstitutionTitle();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExistInstitutionTitle ExistInstitutionTitleParams { get { return s_params_ExistInstitutionTitle; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExistInstitutionTitle
        {
            public readonly string InstitutionTitle = "InstitutionTitle";
        }
        static readonly ActionParamsClass_ExistEmailAddress s_params_ExistEmailAddress = new ActionParamsClass_ExistEmailAddress();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ExistEmailAddress ExistEmailAddressParams { get { return s_params_ExistEmailAddress; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ExistEmailAddress
        {
            public readonly string EmailAddress = "EmailAddress";
        }
        static readonly ActionParamsClass_CheckPassword s_params_CheckPassword = new ActionParamsClass_CheckPassword();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckPassword CheckPasswordParams { get { return s_params_CheckPassword; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckPassword
        {
            public readonly string password = "password";
        }
        static readonly ActionParamsClass_IsUserNameExist s_params_IsUserNameExist = new ActionParamsClass_IsUserNameExist();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_IsUserNameExist IsUserNameExistParams { get { return s_params_IsUserNameExist; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_IsUserNameExist
        {
            public readonly string userName = "userName";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _AddInstitution = "_AddInstitution";
                public readonly string _ListAjax = "_ListAjax";
                public readonly string EditInstitution = "EditInstitution";
                public readonly string Index = "Index";
                public readonly string List = "List";
            }
            public readonly string _AddInstitution = "~/Views/Institution/_AddInstitution.cshtml";
            public readonly string _ListAjax = "~/Views/Institution/_ListAjax.cshtml";
            public readonly string EditInstitution = "~/Views/Institution/EditInstitution.cshtml";
            public readonly string Index = "~/Views/Institution/Index.cshtml";
            public readonly string List = "~/Views/Institution/List.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_InstitutionController : Web.Controllers.InstitutionController
    {
        public T4MVC_InstitutionController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ListOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult List()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.List);
            ListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ListAjaxOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ViewModel.AdminArea.Arganmehr.Institution.InstituionSearchRequest search);

        [NonAction]
        public override System.Web.Mvc.ActionResult ListAjax(ViewModel.AdminArea.Arganmehr.Institution.InstituionSearchRequest search)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ListAjax);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "search", search);
            ListAjaxOverride(callInfo, search);
            return callInfo;
        }

        [NonAction]
        partial void AddInstitutionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInstitution()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInstitution);
            AddInstitutionOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void AddInstitutionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ViewModel.AdminArea.Arganmehr.InstitutionModel viewModel);

        [NonAction]
        public override System.Web.Mvc.ActionResult AddInstitution(ViewModel.AdminArea.Arganmehr.InstitutionModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddInstitution);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AddInstitutionOverride(callInfo, viewModel);
            return callInfo;
        }

        [NonAction]
        partial void EditInstitutionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int InstitutionId);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInstitution(int InstitutionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInstitution);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InstitutionId", InstitutionId);
            EditInstitutionOverride(callInfo, InstitutionId);
            return callInfo;
        }

        [NonAction]
        partial void EditInstitutionOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, ViewModel.AdminArea.Arganmehr.InstitutionModel model);

        [NonAction]
        public override System.Web.Mvc.ActionResult EditInstitution(ViewModel.AdminArea.Arganmehr.InstitutionModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditInstitution);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            EditInstitutionOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void ExistInstitutionCodeOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string InstitutionCode);

        [NonAction]
        public override System.Web.Mvc.JsonResult ExistInstitutionCode(string InstitutionCode)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ExistInstitutionCode);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InstitutionCode", InstitutionCode);
            ExistInstitutionCodeOverride(callInfo, InstitutionCode);
            return callInfo;
        }

        [NonAction]
        partial void ExistInstitutionTitleOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string InstitutionTitle);

        [NonAction]
        public override System.Web.Mvc.JsonResult ExistInstitutionTitle(string InstitutionTitle)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ExistInstitutionTitle);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InstitutionTitle", InstitutionTitle);
            ExistInstitutionTitleOverride(callInfo, InstitutionTitle);
            return callInfo;
        }

        [NonAction]
        partial void ExistEmailAddressOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string EmailAddress);

        [NonAction]
        public override System.Web.Mvc.JsonResult ExistEmailAddress(string EmailAddress)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ExistEmailAddress);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "EmailAddress", EmailAddress);
            ExistEmailAddressOverride(callInfo, EmailAddress);
            return callInfo;
        }

        [NonAction]
        partial void CheckPasswordOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string password);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckPassword(string password)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckPassword);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "password", password);
            CheckPasswordOverride(callInfo, password);
            return callInfo;
        }

        [NonAction]
        partial void IsUserNameExistOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string userName);

        [NonAction]
        public override System.Web.Mvc.JsonResult IsUserNameExist(string userName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.IsUserNameExist);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "userName", userName);
            IsUserNameExistOverride(callInfo, userName);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
